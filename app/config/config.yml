imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: doctrine_extensions.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    container.autowiring.strict_mode: true
    locale: en
    app.upload_dir: '%kernel.project_dir%/var/tmp'
    app.storage_dir: '%kernel.project_dir%/var/documents'

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        name: ci_report_session
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        build: '%app.build%'
        web_host: '%web_host%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        url: '%database_url%'
        charset: UTF8
        server_version: 5.7
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.project_dir%/var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

sensio_framework_extra:
    request: { converters: true }
    
fos_rest:
    routing_loader:
        include_format: false
    exception:
        enabled: true
        messages:
            'Symfony\Component\HttpKernel\Exception\HttpException' : true
    body_converter:
        enabled: true
        validate: true
        validation_errors_argument: violations
    view:
        view_response_listener: true
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json'], fallback_format: 'json', prefer_extension: false }
            - { path: '^/', priorities: ['text/html', '*/*'], fallback_format: html, prefer_extension: true }

# Swiftmailer Configuration
swiftmailer:
    url: '%mailer_url%'
    spool: { type: memory }

nelmio_api_doc:
    documentation:
        info:
            title: ci-report API documentation
            version: 1.0.0
            description: "This is the documentation of API of ci-report."
        parameters:
            prefid:
                in: path
                name: prefid
                description: "Unique short name of project defined on project creation."
                type: string              
        definitions:
            ProjectDataModel:
                title: "Project data input"
                type: "object"
                properties:
                    name:
                        type: "string"
                        description: "Name of the project."
                    warning:
                        type: "integer"
                        description: "Tests warning limit. Integer between 0 and 100 %."
                    success:
                        type: "integer"
                        description: "Tests success limit. Integer between 0 and 100 %."
                    email:
                        type: "string"
                        description: "Email."
                required:
                    - name
                    - warning
                    - success
                    - email
            CampaignDataModel:
                title: "Campaign data input"
                type: "object"
                properties:
                    start:
                        type: "string"
                        description: "Start Date time of the campaign in format (2017-07-01 12:30:01). Now by default."
                    end:
                        type: "string"
                        description: "End Date time of the campaign in format (2017-07-01 12:30:01). Null by default."
            ErrorModel:
                title: "Error"
                type: "object"
                properties:
                    code:
                        type: "integer"
                        description: "Error code"
                    message:
                        type: "string"
                        description: "Error message"
                required:
                    - code
                    - message
    areas:
        path_patterns: # an array of regexps
            - ^/api(?!/doc$)
                    
